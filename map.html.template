<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Church Sites</title>
    <style>
      #map {
        width: 100%;
        height: 400px;
      }
    </style>
    <script id="churches">{{churches}}</script>
  </head>
  <body>
    <div class="container">
      <h1>Church Sites</h1>
      <div id="map"></div>
      <table class="table">
        <thead>
          <tr>
            <th>Address</th>
            <th>Size</th>
            <th>Price</th>
          </tr>
        </thead>
        <tbody id="churches-tbody">
        </tbody>
      </table>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap&v=weekly" defer></script>
    <script>
      const churches = JSON.parse(document.getElementById("churches").text);

      function nameAndAddress(ch) {
        return [ch.name, ch.address].filter(x => x).join("\n")
      }

      function asCurrency(x) {
        if (x) {
          return '$' + x.toLocaleString();
        } else {
          return '';
        }
      }

      function addJitter(lonlat) {
        const factor = 0.00001;
        return {
          lng: lonlat.lng * (1 + (Math.random() - 0.5) * factor),
          lat: lonlat.lat * (1 + (Math.random() - 0.5) * factor),
        }
      }

      function infoWindowContent(ch) {
        return "<h4>" + nameAndAddress(ch).replaceAll("\n", "<br>") + "</h4>" +
              "<table class='table'>" +
                "<tr>" +
                  "<th>Mean</th><td class='text-right'>" + (ch.mean_seconds / 60).toFixed(0) + " minutes</td>" +
                "</tr><tr>" +
                  "<th>Median</th><td class='text-right'>" + (ch.seconds_percents[0] / 60).toFixed(0) + " minutes</td>" +
                "</tr><tr>" +
                  "<th>90%</th><td class='text-right'>" + (ch.seconds_percents[1] / 60).toFixed(0) + " minutes</td>" +
                "</tr><tr>" +
                  "<th>95%</th><td class='text-right'>" + (ch.seconds_percents[2] / 60).toFixed(0) + " minutes</td>" +
                "</tr><tr>" +
                  "<th>Mean change</th><td class='text-right'>" + (ch.mean_delta_seconds / 60).toFixed(0) + " minutes</td>" +
                "</tr>" +
              "</table>";
      }

      function drawTable() {
        const tbody = document.getElementById("churches-tbody");
        let trs = '';
        for (const ch of churches.sort(ch => !ch.current)) {
          trs += "<tr><td>" + nameAndAddress(ch).replaceAll("\n", "<br>") + "</td><td>" + (ch.size || '') + "</td><td>" + asCurrency(ch.price) + "</td></tr>";
        }
        tbody.innerHTML = trs;
      }
      drawTable();

      const stJohns = { lng: -122.82605, lat: 45.51339 };

      function initMap() {
        const map = new google.maps.Map(document.getElementById("map"), {
          zoom: 10,
          center: stJohns,
        });
        const infoWindow = new google.maps.InfoWindow({
          content: "",
        });
        for (const ch of churches) {
          const m = new google.maps.Marker({
            // TODO: Instead of adding jitter,
            // detect multiple pins at the same place and space out only those
            // (around a small radius).
            position: addJitter({ lng: ch.longitude, lat: ch.latitude }),
            map: map,
            title: nameAndAddress(ch),
          });
          m.addListener("click", () => {
            infoWindow.setContent(infoWindowContent(ch));
            infoWindow.open({
              anchor: m,
              map,
              shouldFocus: false,
            });
          });
        }
      }
      window.initMap = initMap;
    </script>
  </body>
</html>

